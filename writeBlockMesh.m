function [] = writeBlockMesh(bounds, v, b, e)

L_f = bounds(1);
L_w = bounds(2);
R = bounds(3);
H = bounds(4);
z = bounds(5);

x = v(:,1);
y = v(:,2);
N = length(v);

b1 = b(:,1)-1;
b2 = b(:,2)-1;
b3 = b(:,3)-1;
b4 = b(:,4)-1;
b5 = b(:,1)+N-1;
b6 = b(:,2)+N-1;
b7 = b(:,3)+N-1;
b8 = b(:,4)+N-1;
gr1 = b(:,5);
gr2 = b(:,6);
gr3 = 1.0;

ev1 = e(:,1);
ev2 = e(:,2);
ex = e(:,3);
ey = e(:,4);
Ne = length(e);

%% WRITE

fid = fopen('blockMeshDict', 'w');
% File write start

fprintf(fid, '// Generated by Chase Holder \n\n');
fprintf(fid, '// R = 1\n');
fprintf(fid, '// L_f = %2.2f\n', L_f);
fprintf(fid, '// L_w = %2.2f\n', L_w);
fprintf(fid, '// H = %2.2f\n\n\n', H);
fprintf(fid, 'FoamFile\n{\n    version  2.0;\n    format   ascii;\n    class');
fprintf(fid, '    dictionary;\n    object   blockMeshDict;\n}\n\nconvertToMeters 1.0;\n');

% VERTICES
%
fprintf(fid, '\nvertices\n(\n');
for i=1:N
    fprintf(fid, '    (% 2.8f % 2.8f  -0.05) // %1.0f \n' ,[x(i) y(i) i-1]);
end

for i=1:N
    fprintf(fid, '    (% 2.8f % 2.8f   0.05) // %1.0f \n' ,[x(i) y(i) N+i-1]);
end
fprintf(fid, ');\n');
%}

% BLOCKS 
%
fprintf(fid, '\nblocks\n(\n');
for i=1:8
    fprintf(fid, '   // block %1.0f\n   hex (', i-1);
    fprintf(fid, '%1.0f %1.0f %1.0f %1.0f %1.0f %1.0f %1.0f %1.0f) ', [b1(i) b2(i) b3(i) b4(i) b5(i) b6(i) b7(i) b8(i)]);
    fprintf(fid, '(%1.0f %1.0f %1.0f) simpleGrading (2.0 1.0 1.0)\n\n', [gr1(i) gr2(i) gr3]);
end
for i=9:length(b)
    fprintf(fid, '   // block %1.0f\n   hex (', i-1);
    fprintf(fid, '%1.0f %1.0f %1.0f %1.0f %1.0f %1.0f %1.0f %1.0f) ', [b1(i) b2(i) b3(i) b4(i) b5(i) b6(i) b7(i) b8(i)]);
    fprintf(fid, '(%1.0f %1.0f %1.0f) simpleGrading (1.0 1.0 1.0)\n\n', [gr1(i) gr2(i) gr3]);
end

fprintf(fid, ');\n\n');

% EDGES
%
fprintf(fid, '\nedges\n(\n\n');
for i=1:length(e)
    fprintf(fid, 'arc %1.0f %1.0f (% 2.8f % 2.8f -0.05) \n' ,[ev1(i) ev2(i) ex(i) ey(i)]);
end

for i=1:length(e)
    fprintf(fid, 'arc %1.0f %1.0f (% 2.8f % 2.8f  0.05) \n' ,[ev1(i)+N ev2(i)+N ex(i) ey(i)]);
end
fprintf(fid, ');\n\n');
%}

% BOUNDARY
fprintf(fid,['boundary\n(\n\n   inlet\n   {\n      type patch;\n      faces\n      (\n'...
    '         (22 54 55 23)\n         (23 55 56 24)\n         (24 56 57 25)\n         (25 57 58 26)\n'...
    '      );\n   }\n\n   outlet\n   {\n      type patch;\n      faces\n      (\n         '...
    '(18 50 49 17)\n         (17 49 48 16)\n         (16 48 63 31)\n         (31 63 62 30)\n      '...
    ');\n   }\n\n   cylinder\n   {\n      type wall;\n      faces\n      (\n         (0 32 33 1)\n         '...
    '(1 33 34 2)\n         (2 34 35 3)\n         (3 35 36 4)\n         (4 36 37 5)\n         (5 37 38 6)\n'...
    '         (6 38 39 7)\n         (7 39 32 0)\n      );\n   }\n\n   top\n   {\n      type symmetryPlane;\n      '...
    'faces\n      (\n         (22 54 53 21)\n         (21 53 52 20)\n         (20 52 51 19)\n'...
    '         (19 51 50 18)\n      );\n   }\n\n   bottom\n   {\n      type symmetryPlane;\n      '...
    'faces\n      (\n         (26 58 59 27)\n         (27 59 60 28)\n         (28 60 61 29)\n'...
    '         (29 61 62 30)\n      );\n   }\n\n);']);

fclose(fid);